{"version":3,"sources":["login/src/login.js"],"names":["$","LoginForm","Garnish","Base","extend","$form","$loginNameInput","$passwordInput","$rememberMeCheckbox","$forgotPasswordLink","$rememberPasswordLink","$submitBtn","$spinner","forgotPassword","validateOnInput","init","$errors","Craft","PasswordInput","removeListener","$newPasswordInput","addListener","this","isMobileBrowser","val","focus","validate","loginNameVal","length","window","useEmailAsUsername","t","match","passwordLength","minPasswordLength","attribute","min","maxPasswordLength","max","onInput","clearErrors","event","onSubmit","error","preventDefault","showError","addClass","submitForgotPassword","submitLogin","response","success","MessageSentModal","postActionRequest","data","proxy","textStatus","onSubmitResponse","rememberMe","returnUrl","password","prop","location","href","shake","removeClass","onSwitchForm","trigger","appendTo","velocity","base","$container","toggleClass","text","Modal","$bod","hide","jQuery"],"mappings":"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","file":"login.min.js","sourcesContent":["(function($) {\n    /** global: Craft */\n    /** global: Garnish */\n    var LoginForm = Garnish.Base.extend({\n        $form: null,\n        $loginNameInput: null,\n        $passwordInput: null,\n        $rememberMeCheckbox: null,\n        $forgotPasswordLink: null,\n        $rememberPasswordLink: null,\n        $submitBtn: null,\n        $spinner: null,\n        $errors: null,\n\n        forgotPassword: false,\n        validateOnInput: false,\n\n        init: function() {\n            this.$form = $('#login-form');\n            this.$loginNameInput = $('#loginName');\n            this.$passwordInput = $('#password');\n            this.$rememberMeCheckbox = $('#rememberMe');\n            this.$forgotPasswordLink = $('#forgot-password');\n            this.$rememberPasswordLink = $('#remember-password');\n            this.$submitBtn = $('#submit');\n            this.$spinner = $('#spinner');\n            this.$errors = $('#login-errors');\n\n            new Craft.PasswordInput(this.$passwordInput, {\n                onToggleInput: $.proxy(function($newPasswordInput) {\n                    this.removeListener(this.$passwordInput, 'input');\n                    this.$passwordInput = $newPasswordInput;\n                    this.addListener(this.$passwordInput, 'input', 'onInput');\n                }, this)\n            });\n\n            this.addListener(this.$loginNameInput, 'input', 'onInput')\n            this.addListener(this.$passwordInput, 'input', 'onInput');\n            this.addListener(this.$forgotPasswordLink, 'click', 'onSwitchForm');\n            this.addListener(this.$rememberPasswordLink, 'click', 'onSwitchForm');\n            this.addListener(this.$form, 'submit', 'onSubmit');\n\n            // Focus first empty field in form\n            if (!Garnish.isMobileBrowser()) {\n                if (this.$loginNameInput.val()) {\n                    this.$passwordInput.focus();\n                } else {\n                    this.$loginNameInput.focus();\n                }\n            }\n        },\n\n        validate: function() {\n            const loginNameVal = this.$loginNameInput.val();\n            if (loginNameVal.length === 0) {\n                if (window.useEmailAsUsername) {\n                    return Craft.t('app', 'Invalid email.');\n                }\n                return Craft.t('app', 'Invalid username or email.');\n            }\n\n            if (window.useEmailAsUsername && !loginNameVal.match('.+@.+\\..+')) {\n                return Craft.t('app', 'Invalid email.');\n            }\n\n            if (!this.forgotPassword) {\n                const passwordLength = this.$passwordInput.val().length;\n                if (passwordLength < window.minPasswordLength) {\n                    return Craft.t('yii', '{attribute} should contain at least {min, number} {min, plural, one{character} other{characters}}.', {\n                        attribute: Craft.t('app', 'Password'),\n                        min: window.minPasswordLength,\n                    });\n                }\n                if (passwordLength > window.maxPasswordLength) {\n                    return Craft.t('yii', '{attribute} should contain at most {max, number} {max, plural, one{character} other{characters}}.', {\n                        attribute: Craft.t('app', 'Password'),\n                        max: window.maxPasswordLength,\n                    });\n                }\n            }\n\n            return true;\n        },\n\n        onInput: function(event) {\n            if (this.validateOnInput && this.validate() === true) {\n                this.clearErrors();\n            }\n        },\n\n        onSubmit: function(event) {\n            // Prevent full HTTP submits\n            event.preventDefault();\n\n            const error = this.validate();\n            if (error !== true) {\n                this.showError(error);\n                this.validateOnInput = true;\n                return;\n            }\n\n            this.$submitBtn.addClass('active');\n            this.$spinner.removeClass('hidden');\n\n            this.clearErrors();\n\n            if (this.forgotPassword) {\n                this.submitForgotPassword();\n            } else {\n                this.submitLogin();\n            }\n        },\n\n        submitForgotPassword: function() {\n            var data = {\n                loginName: this.$loginNameInput.val()\n            };\n\n            Craft.postActionRequest('users/send-password-reset-email', data, $.proxy(function(response, textStatus) {\n                if (textStatus === 'success') {\n                    if (response.success) {\n                        new MessageSentModal();\n                    } else {\n                        this.showError(response.error);\n                    }\n                }\n\n                this.onSubmitResponse();\n            }, this));\n        },\n\n        submitLogin: function() {\n            var data = {\n                loginName: this.$loginNameInput.val(),\n                password: this.$passwordInput.val(),\n                rememberMe: (this.$rememberMeCheckbox.prop('checked') ? 'y' : '')\n            };\n\n            Craft.postActionRequest('users/login', data, $.proxy(function(response, textStatus) {\n                if (textStatus === 'success') {\n                    if (response.success) {\n                        window.location.href = response.returnUrl;\n                    } else {\n                        Garnish.shake(this.$form);\n                        this.onSubmitResponse();\n\n                        // Add the error message\n                        this.showError(response.error);\n                    }\n                } else {\n                    this.onSubmitResponse();\n                }\n            }, this));\n\n            return false;\n        },\n\n        onSubmitResponse: function() {\n            this.$submitBtn.removeClass('active');\n            this.$spinner.addClass('hidden');\n        },\n\n        showError: function(error) {\n            this.clearErrors();\n\n            $('<p style=\"display: none;\">' + error + '</p>')\n                .appendTo(this.$errors)\n                .velocity('fadeIn');\n        },\n\n        clearErrors: function() {\n            this.$errors.empty();\n        },\n\n        onSwitchForm: function(event) {\n            if (!Garnish.isMobileBrowser()) {\n                this.$loginNameInput.trigger('focus');\n            }\n\n            this.clearErrors();\n\n            this.forgotPassword = !this.forgotPassword;\n\n            this.$form.toggleClass('reset-password', this.forgotPassword);\n            this.$submitBtn.text(Craft.t('app', this.forgotPassword ? 'Reset Password' : 'Login'));\n        },\n    });\n\n    var MessageSentModal = Garnish.Modal.extend({\n        init: function() {\n            var $container = $('<div class=\"modal fitted email-sent\"><div class=\"body\">' + Craft.t('app', 'Check your email for instructions to reset your password.') + '</div></div>')\n                .appendTo(Garnish.$bod);\n\n            this.base($container);\n        },\n\n        hide: function() {\n        }\n    });\n\n    new LoginForm();\n})(jQuery);\n"]}